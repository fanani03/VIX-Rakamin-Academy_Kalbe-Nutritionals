# -*- coding: utf-8 -*-
"""W4-Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_6dzY2Y_6VFx-bOtVNek0iq14cs0H3DK

# Machine Learning Project
## Kalbe Nutritionals Data Scientist Virtual Internship Rakamin
Clustering Using K-Means

by : Ahmad Fanani
"""

df = pd.read_csv('/content/drive/MyDrive/KULIAH/Pribadi/VIX Rakamin/W4/Case Study - Transaction.csv', delimiter=';')

df.info()

# Groupby customerID dan agregasi
grouped_data = df.groupby('CustomerID').agg({
    'TransactionID': 'count',
    'Qty': 'sum',
    'TotalAmount': 'sum'
}).reset_index()

print(grouped_data)

#elbow
from sklearn.cluster import KMeans
features = grouped_data[['TransactionID', 'Qty', 'TotalAmount']]

# Inertia untuk jumlah cluster dari 1 hingga 10
inertia = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(features)
    inertia.append(kmeans.inertia_)

# Plot inertia curve
plt.figure(figsize=(8, 6))
plt.plot(range(1, 11), inertia, marker='o')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.title('Elbow')
plt.xticks(range(1, 11))
plt.grid()
plt.show()

import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

df = pd.DataFrame(grouped_data)

# Features yang akan digunakan untuk clustering
features = grouped_data[['TransactionID', 'Qty', 'TotalAmount']]

# Menentukan jumlah cluster yang diinginkan
n_clusters = 3

# Membuat model K-Means
kmeans = KMeans(n_clusters=n_clusters, random_state=42)

# Melakukan clustering
df['cluster'] = kmeans.fit_predict(features)

# Visualisasi data
plt.figure(figsize=(8, 6))
plt.scatter(df['TransactionID'], df['TotalAmount'], c=df['cluster'], cmap='viridis', s=50)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 2], c='red', marker='x', s=100, label='Centroids')
plt.xlabel('Transaction ID')
plt.ylabel('Total Amount')
plt.title('Clustering with K-Means')
plt.legend()
plt.show()